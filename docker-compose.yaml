version: "3.12"

services:

  webapp:
    restart: unless-stopped
    build:
      context: ./
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_NAME: f5_codium
      KAFKA_SERVER_HOST: kafka
      KAFKA_SERVER_PORT: 9093
    depends_on:
      - db
      - kafka
    volumes:
      - ./alembic:/app/alembic
      - ./kafka_home:/app/kafka_home
      - ./src:/app/src
      - ./static:/app/static
      - ./alembic.ini:/app/alembic.ini
    command: [ "sh", "-c", "poetry run alembic upgrade head &&
                                              poetry run uvicorn src.main:app --host 0.0.0.0 --reload" ]

  db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: f5_codium
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093, OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

volumes:
  postgres_data:
